// You custom settings file to override Foundation defaults
@import "settings";

$rowWidth: 1024px;
//$bodyFontFamily: 'PT Sans', sans-serif;
//$headerFontFamily: 'PT Sans', sans-serif;

// Comment out this import if you are customizing you imports below
@import "foundation";

// ----------------------------------------
// Import specific parts of Foundation by commenting the import "foundation"
// and uncommenting what you want below. You must uncomment the following if customizing

// @import "compass/css3";
// @import "foundation/settings";
// @import "foundation/functions/all";
// @import "foundation/common/globals";
// @import "foundation/mixins/clearfix";
// @import "modular-scale";

// Control which mixins you have access too

// @import "foundation/mixins/css-triangle";
// @import "foundation/mixins/font-size";

// Must include next two for semantic grid to work

// @import "foundation/mixins/respond-to";
// @import "foundation/mixins/semantic-grid";

// Must include the grid for any responsiveness

// @import "foundation/components/grid";

// Control which common styles get compiled

// @import "foundation/common/typography";
// @import "foundation/common/forms";

// Control which components you get if customizing

// @import "foundation/components/modules/buttons";
// @import "foundation/components/modules/tabs";
// @import "foundation/components/modules/ui";
// @import "foundation/components/modules/navbar";
// @import "foundation/components/modules/orbit";
// @import "foundation/components/modules/reveal";
// @import "foundation/components/modules/offcanvas";


$navbarDark: #1B4474;
$navbarLight: #002856;
$navbarHeight: 40px;
$navbarItemWidth: 50px;

$navbarBorderDark: 1px solid rgba(darken($navbarDark, 10%),0.7);;
$navbarBorderLight: 1px solid rgba(lighten($navbarDark, 5%),0.7);

$grayBorder: 1px solid #ccc;

$mapHeight: 140px;

html, body {height: 100%;}
body { background: #fafafa;}
body.off-canvas { padding: 0; margin: 0; }

.container { width: 100%; }
.container, .row { overflow: hidden; }


[role="main"]:before { content: " "; position: absolute; z-index: -1; top: 0; left: -100%; width: 100%; height: 100%; }

[role="complementary"],
[role="main"] { width: 100%; padding: 0 15px; display: block;	position: relative; z-index: 1; @include transition(.25s all ease-in); }
[role="complementary"] { margin-left: -100%; width: 80%; float: left; z-index: 2; }
[role="main"] { margin-left: 0; float: right; z-index: 1; position: relative; }
.active [role="complementary"] { margin-left: 0; }
.active [role="main"] { margin-right: -80%; }


// Applicable to both navbar and main content div
#navbar, #content {
    // overflow: hidden;
    // position: absolute; 
    left: 0; right: 0;
    @include outerRow();
    @include respondTo(smallScreen) {
        width: auto; min-width: 0; margin-left: 0; margin-right: 0;
        border: 0;
    }
}

#navbar {
    margin: 0 auto;
    height: $navbarHeight;
    line-height: $navbarHeight;
    color: $white;
    list-style: none;
    background: $navbarLight; // Basic background for old devices
    @include background(
        // Highlighting radial gradient. 
        // Light top, dark bottom
        radial-gradient(center, ellipse cover, rgba(0,0,0,0), rgba(0,0,0,0.1)),
        linear-gradient(top, $navbarDark, $navbarLight)
    );

    li {
        // Most of the elements are on the right, so default to floating them right
        float: right;
        // Set width of each button and center align it 
        width: $navbarItemWidth;
        text-align: center;

        // 3d effect by having a dark and light border on each item
        border-left: $navbarBorderDark;
        a { 
            border-left: $navbarBorderLight;
            display: block;
            color: $white;
            // Feedback for hover/clicked
            &:active, &:hover {@include box-shadow(0 0 $navbarItemWidth/2 $black inset);}
            // If the button has been pressed, distinguish between press and hover
            &:active {background: rgba(0,0,0,0.4);}
        }

        &#home { 
            float: left;
            border: 0;
            border-right: $navbarBorderLight;
            a { border-right: $navbarBorderDark; }
        }
        &#title {
            float: left;
            width: auto;
            border: 0;
            h1 {
                // Set line-height to navbarHeight to give vertical alignment
                line-height: $navbarHeight;
                font-size: ms(0);
                // Left spacing equivalent to font-size. 
                margin: auto 0 auto ms(0);
                // Pull the text up slightly to align with buttons
                margin-top: -2px;
            }
        }
    }
}

#content {
    /* Content is a container for two child divs:
     - #list which typically contains a scrolling list container
     - .content-detail which holds a detail view or a map (#map)
    */

    top: $navbarHeight;
    bottom: 0;
    background: $white;
    border-left: $grayBorder;
    border-right: $grayBorder;

    &> div {
        height: 100%;
        @include respondTo(smallScreen) {
            width: auto !important; float: none;
        }
    }
    #list {
        
        overflow: auto;
        -webkit-overflow-scrolling: touch;
        @include column(4);
        @include pull(8);
        @include respondTo(smallScreen) {
            right: auto;
            width: auto !important; float: none;
            padding-bottom: $mapHeight;
        }
        
        input {
            margin: 6px 0;
            padding-right: 25px;
        }
        span.deleteicon {
            display: block;
            line-height: 9px;
            position: absolute;
            right: 20px;
            top: 15px;
            padding: 4px 4px 2px 4px;
            border-radius: 30px;
            font-size: 9px;
            color: $white;
            background: #ccc;
            cursor: pointer;
        }
    }

    .content-detail {
        @include column(8);
        @include push(4);
        border-top: $grayBorder;
        border-bottom: $grayBorder;
        border-left: $grayBorder;
        @include respondTo(smallScreen) {
            left: auto;
        }
    }
    #map {
        @include respondTo(smallScreen) {
            height: $mapHeight;
            width: 100% !important;
            .leaflet-control-zoom {
                display: none;
            }
        }
    }
}

h2 { font-size: ms(2);}

#sidebar, .results-list {
    list-style: none;

    li {
        & * {
            font-family: Helvetica, Verdana, sans-serif;
            font-size: ms(2)/1.5;
        }

        
        $dark: rgba(200,200,200, 0.2);
        $light: rgba(255,255,255, 0.1);
        $border-color: rgba(200,200,200, 0.5);
        &:first-child {
            border-top: 2px solid $border-color;
        }
        border-bottom: 2px solid $border-color;
        padding: 10px 5px;
        @include box-shadow(inset 0 0 2px #fff);
        color: rgba(40, 40, 40, 0.7);
        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.9);

        @include background(
            url("images/backgrounds/cream_dust.png"),
            linear-gradient(top, $light, $dark)  
        );
        
        // Correct for column margin
        margin: 0 -15px;
        padding: 5px;

        h3 {
            
            font-size: ms(1);
            font-weight: normal;
            padding: 0;
            margin: 0;
        }
    }
}
